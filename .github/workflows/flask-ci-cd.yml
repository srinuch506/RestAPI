name: CI/CD Pipeline - Flask App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: flask-app
      DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          # assuming you have tests in a 'tests/' folder
          pytest tests/

      - name: Login to Docker Hub
        run: echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin

      - name: Build Docker Image
        run: docker build -t $DOCKER_USER/$IMAGE_NAME:latest .

      - name: Push Docker Image
        run: docker push $DOCKER_USER/$IMAGE_NAME:latest

      # Optional - Deploy via SSH (ex: to AWS EC2 or any VPS)
      # - name: Deploy to Server
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.SERVER_SSH_KEY }}
      #     script: |
      #       docker pull $DOCKER_USER/$IMAGE_NAME:latest
      #       docker stop flask-container || true
      #       docker rm flask-container || true
      #       docker run -d -p 80:5000 --name flask-container $DOCKER_USER/$IMAGE_NAME:latest
 
